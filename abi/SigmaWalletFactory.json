{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "contract IProviderManager",
          "name": "providerManager_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "contract SigmaWallet",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "ownerId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "contract SigmaWallet",
          "name": "ret",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "ownerId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162004ada38038062004ada83398181016040528101906200003791906200017e565b81816040516200004790620000ad565b6200005492919062000255565b604051809103906000f08015801562000071573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505062000282565b613781806200135983390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ed82620000c0565b9050919050565b60006200010182620000e0565b9050919050565b6200011381620000f4565b81146200011f57600080fd5b50565b600081519050620001338162000108565b92915050565b60006200014682620000e0565b9050919050565b620001588162000139565b81146200016457600080fd5b50565b60008151905062000178816200014d565b92915050565b60008060408385031215620001985762000197620000bb565b5b6000620001a88582860162000122565b9250506020620001bb8582860162000167565b9150509250929050565b6000819050919050565b6000620001f0620001ea620001e484620000c0565b620001c5565b620000c0565b9050919050565b60006200020482620001cf565b9050919050565b60006200021882620001f7565b9050919050565b6200022a816200020b565b82525050565b60006200023d82620001f7565b9050919050565b6200024f8162000230565b82525050565b60006040820190506200026c60008301856200021f565b6200027b602083018462000244565b9392505050565b6080516110ae620002ab6000396000818160db0152818161012f015261024701526110ae6000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c806311464fbe146200004b57806321ec1253146200006d5780636586ace614620000a3575b600080fd5b62000055620000d9565b604051620000649190620003e1565b60405180910390f35b6200008b6004803603810190620000859190620005af565b620000fd565b6040516200009a91906200063a565b60405180910390f35b620000c16004803603810190620000bb9190620005af565b620001ff565b604051620000d09190620003e1565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000620001f78260001b60405180602001620001199062000348565b6020820181038252601f19601f820116604052507f000000000000000000000000000000000000000000000000000000000000000086604051602401620001619190620006e0565b60405160208183030381529060405263f62d188860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051602001620001b992919062000761565b604051602081830303815290604052604051602001620001db929190620007d7565b6040516020818303038152906040528051906020012062000306565b905092915050565b6000806200020e8484620000fd565b905060008173ffffffffffffffffffffffffffffffffffffffff163b905060008111156200024157819250505062000300565b8360001b7f000000000000000000000000000000000000000000000000000000000000000086604051602401620002799190620006e0565b60405160208183030381529060405263f62d188860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002cc9062000348565b620002d992919062000761565b8190604051809103906000f5905080158015620002fa573d6000803e3d6000fd5b50925050505b92915050565b6000620003158383306200031d565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b610879806200080083390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620003a16200039b620003958462000356565b62000376565b62000356565b9050919050565b6000620003b58262000380565b9050919050565b6000620003c982620003a8565b9050919050565b620003db81620003bc565b82525050565b6000602082019050620003f86000830184620003d0565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000467826200041c565b810181811067ffffffffffffffff821117156200048957620004886200042d565b5b80604052505050565b60006200049e620003fe565b9050620004ac82826200045c565b919050565b600067ffffffffffffffff821115620004cf57620004ce6200042d565b5b620004da826200041c565b9050602081019050919050565b82818337600083830152505050565b60006200050d6200050784620004b1565b62000492565b9050828152602081018484840111156200052c576200052b62000417565b5b62000539848285620004e7565b509392505050565b600082601f83011262000559576200055862000412565b5b81356200056b848260208601620004f6565b91505092915050565b6000819050919050565b620005898162000574565b81146200059557600080fd5b50565b600081359050620005a9816200057e565b92915050565b60008060408385031215620005c957620005c862000408565b5b600083013567ffffffffffffffff811115620005ea57620005e96200040d565b5b620005f88582860162000541565b92505060206200060b8582860162000598565b9150509250929050565b6000620006228262000356565b9050919050565b620006348162000615565b82525050565b600060208201905062000651600083018462000629565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200069357808201518184015260208101905062000676565b60008484015250505050565b6000620006ac8262000657565b620006b8818562000662565b9350620006ca81856020860162000673565b620006d5816200041c565b840191505092915050565b60006020820190508181036000830152620006fc81846200069f565b905092915050565b600081519050919050565b600082825260208201905092915050565b60006200072d8262000704565b6200073981856200070f565b93506200074b81856020860162000673565b62000756816200041c565b840191505092915050565b600060408201905062000778600083018562000629565b81810360208301526200078c818462000720565b90509392505050565b600081905092915050565b6000620007ad8262000704565b620007b9818562000795565b9350620007cb81856020860162000673565b80840191505092915050565b6000620007e58285620007a0565b9150620007f38284620007a0565b9150819050939250505056fe608060405260405161087938038061087983398181016040528101906100259190610520565b6100378282600061003e60201b60201c565b505061074f565b61004d8361007660201b60201c565b60008251118061005a5750805b156100715761006f83836100cb60201b60201c565b505b505050565b610085816100fe60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606100f68383604051806060016040528060278152602001610852602791396101c360201b60201c565b905092915050565b61010d8161024f60201b60201c565b61014c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610143906105ff565b60405180910390fd5b8061017f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61027260201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101ed9190610666565b600060405180830381855af49150503d8060008114610228576040519150601f19603f3d011682016040523d82523d6000602084013e61022d565b606091505b50915091506102448683838761027c60201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156102e45760008351036102dc5761029c8561024f60201b60201c565b6102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d2906106c9565b60405180910390fd5b5b8290506102f5565b6102f483836102fd60201b60201c565b5b949350505050565b6000825111156103105781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610344919061072d565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061038c82610361565b9050919050565b61039c81610381565b81146103a757600080fd5b50565b6000815190506103b981610393565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610412826103c9565b810181811067ffffffffffffffff82111715610431576104306103da565b5b80604052505050565b600061044461034d565b90506104508282610409565b919050565b600067ffffffffffffffff8211156104705761046f6103da565b5b610479826103c9565b9050602081019050919050565b60005b838110156104a4578082015181840152602081019050610489565b60008484015250505050565b60006104c36104be84610455565b61043a565b9050828152602081018484840111156104df576104de6103c4565b5b6104ea848285610486565b509392505050565b600082601f830112610507576105066103bf565b5b81516105178482602086016104b0565b91505092915050565b6000806040838503121561053757610536610357565b5b6000610545858286016103aa565b925050602083015167ffffffffffffffff8111156105665761056561035c565b5b610572858286016104f2565b9150509250929050565b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006105e9602d8361057c565b91506105f48261058d565b604082019050919050565b60006020820190508181036000830152610618816105dc565b9050919050565b600081519050919050565b600081905092915050565b60006106408261061f565b61064a818561062a565b935061065a818560208601610486565b80840191505092915050565b60006106728284610635565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006106b3601d8361057c565b91506106be8261067d565b602082019050919050565b600060208201905081810360008301526106e2816106a6565b9050919050565b600081519050919050565b60006106ff826106e9565b610709818561057c565b9350610719818560208601610486565b610722816103c9565b840191505092915050565b6000602082019050818103600083015261074781846106f4565b905092915050565b60f58061075d6000396000f3fe608060405236601057600e6018565b005b60166018565b005b601e602c565b602a6026602e565b603b565b565b565b600060366060565b905090565b3660008037600080366000845af43d6000803e8060008114605b573d6000f35b3d6000fd5b6000608c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60b5565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea2646970667358221220338e72e5eb09e605733ce6c07f31d23a2eff1e9fd8c77171de4b7d86b33a744e64736f6c63430008140033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b2ae941ea882db854690a2f313808746199df8802c3026ed06cc1384dbb614eb64736f6c6343000814003360e06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50604051620037813803806200378183398181016040528101906200006a919062000273565b8173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000e2620000ea60201b60201c565b50506200039e565b600060019054906101000a900460ff16156200013d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001349062000341565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620001ae5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620001a5919062000381565b60405180910390a15b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e282620001b5565b9050919050565b6000620001f682620001d5565b9050919050565b6200020881620001e9565b81146200021457600080fd5b50565b6000815190506200022881620001fd565b92915050565b60006200023b82620001d5565b9050919050565b6200024d816200022e565b81146200025957600080fd5b50565b6000815190506200026d8162000242565b92915050565b600080604083850312156200028d576200028c620001b0565b5b60006200029d8582860162000217565b9250506020620002b0858286016200025c565b9150509250929050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b600062000329602783620002ba565b91506200033682620002cb565b604082019050919050565b600060208201905081810360008301526200035c816200031a565b9050919050565b600060ff82169050919050565b6200037b8162000363565b82525050565b600060208201905062000398600083018462000370565b92915050565b60805160a05160c051613390620003f160003960008181610bde015261144b0152600061127c015260008181610737015281816107c5015281816109e701528181610a750152610b2501526133906000f3fe60806040526004361061010c5760003560e01c80634f1ef28611610095578063bc197c8111610064578063bc197c8114610343578063c399ec8814610380578063d087d288146103ab578063f23a6e61146103d6578063f62d18881461041357610113565b80634f1ef286146102a857806352d1902d146102c4578063b0d691fe146102ef578063b61d27f61461031a57610113565b806318dfb3c7116100dc57806318dfb3c7146101e65780633659cfe61461020f5780633a871cdd146102385780634a58db19146102755780634d44560d1461027f57610113565b806223de2914610118578063019c08f51461014157806301ffc9a71461016c578063150b7a02146101a957610113565b3661011357005b600080fd5b34801561012457600080fd5b5061013f600480360381019061013a919061187c565b61043c565b005b34801561014d57600080fd5b50610156610446565b60405161016391906119db565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190611a55565b6104d4565b6040516101a09190611a9d565b60405180910390f35b3480156101b557600080fd5b506101d060048036038101906101cb9190611ab8565b61060e565b6040516101dd9190611b4f565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190611c16565b610623565b005b34801561021b57600080fd5b5061023660048036038101906102319190611c97565b610735565b005b34801561024457600080fd5b5061025f600480360381019061025a9190611d1f565b6108bd565b60405161026c9190611d9d565b60405180910390f35b61027d6108f0565b005b34801561028b57600080fd5b506102a660048036038101906102a19190611df6565b610965565b005b6102c260048036038101906102bd9190611f66565b6109e5565b005b3480156102d057600080fd5b506102d9610b21565b6040516102e69190611fd1565b60405180910390f35b3480156102fb57600080fd5b50610304610bda565b604051610311919061204b565b60405180910390f35b34801561032657600080fd5b50610341600480360381019061033c9190612066565b610c02565b005b34801561034f57600080fd5b5061036a60048036038101906103659190612130565b610c5f565b6040516103779190611b4f565b60405180910390f35b34801561038c57600080fd5b50610395610c77565b6040516103a29190611d9d565b60405180910390f35b3480156103b757600080fd5b506103c0610cff565b6040516103cd9190611d9d565b60405180910390f35b3480156103e257600080fd5b506103fd60048036038101906103f8919061220c565b610d8a565b60405161040a9190611b4f565b60405180910390f35b34801561041f57600080fd5b5061043a60048036038101906104359190612347565b610da0565b005b5050505050505050565b60018054610453906123bf565b80601f016020809104026020016040519081016040528092919081815260200182805461047f906123bf565b80156104cc5780601f106104a1576101008083540402835291602001916104cc565b820191906000526020600020905b8154815290600101906020018083116104af57829003601f168201915b505050505081565b60007f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061059f57507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061060757507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600063150b7a0260e01b905095945050505050565b61062b610ee0565b818190508484905014610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a9061243c565b60405180910390fd5b60005b8484905081101561072e5761071b8585838181106106975761069661245c565b5b90506020020160208101906106ac9190611c97565b60008585858181106106c1576106c061245c565b5b90506020028101906106d3919061249a565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610f57565b80806107269061252c565b915050610676565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16036107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba906125e6565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610802610fdb565b73ffffffffffffffffffffffffffffffffffffffff1614610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084f90612678565b60405180910390fd5b61086181611032565b6108ba81600067ffffffffffffffff8111156108805761087f611e3b565b5b6040519080825280601f01601f1916602001820160405280156108b25781602001600182028036833780820191505090505b50600061103d565b50565b60006108c7610ee0565b6108d184846111ab565b90506108e08460200135611361565b6108e982611364565b9392505050565b6108f8610bda565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161093191906126a7565b6000604051808303818588803b15801561094a57600080fd5b505af115801561095e573d6000803e3d6000fd5b5050505050565b61096d610ee0565b610975610bda565b73ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016109af9291906126d1565b600060405180830381600087803b1580156109c957600080fd5b505af11580156109dd573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6a906125e6565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610ab2610fdb565b73ffffffffffffffffffffffffffffffffffffffff1614610b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aff90612678565b60405180910390fd5b610b1182611032565b610b1d8282600161103d565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610bb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba89061276c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610c0a610ee0565b610c59848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610f57565b50505050565b600063bc197c8160e01b905098975050505050505050565b6000610c81610bda565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610cb991906126a7565b602060405180830381865afa158015610cd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfa91906127a1565b905090565b6000610d09610bda565b73ffffffffffffffffffffffffffffffffffffffff166335567e1a3060006040518363ffffffff1660e01b8152600401610d4492919061282d565b602060405180830381865afa158015610d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8591906127a1565b905090565b600063f23a6e6160e01b90509695505050505050565b60008060019054906101000a900460ff16159050808015610dd15750600160008054906101000a900460ff1660ff16105b80610dfe5750610de030611400565b158015610dfd5750600160008054906101000a900460ff1660ff16145b5b610e3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e34906128c8565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610e7a576001600060016101000a81548160ff0219169083151502179055505b610e8382611423565b8015610edc5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610ed39190612930565b60405180910390a15b5050565b610ee8610bda565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4c90612997565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff168484604051610f8091906129fe565b60006040518083038185875af1925050503d8060008114610fbd576040519150601f19603f3d011682016040523d82523d6000602084013e610fc2565b606091505b509150915081610fd457805160208201fd5b5050505050565b60006110097f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6114af565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61103a610ee0565b50565b6110697f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b6114b9565b60000160009054906101000a900460ff161561108d57611088836114c3565b6111a6565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156110f557506040513d601f19601f820116820180604052508101906110f29190612a2a565b60015b611134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112b90612ac9565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119090612b5b565b60405180910390fd5b506111a583838361157c565b5b505050565b60007fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f6040516111da90612bc7565b60405180910390a1600080600080868061014001906111f9919061249a565b8101906112069190612be7565b93509350935093507fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f8460405161123d91906119db565b60405180910390a17fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f60405161127290612d0a565b60405180910390a17f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634d184ac38585858560016040518663ffffffff1660e01b81526004016112dc959493929190612e0d565b602060405180830381865afa1580156112f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131d9190612eaf565b507fa95e6e2a182411e7a6f9ed114a85c3761d87f9b8f453d842c71235aa64fff99f60405161134b90612f28565b60405180910390a1600094505050505092915050565b50565b600081146113fd5760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906040516113b490612f6e565b600060405180830381858888f193505050503d80600081146113f2576040519150601f19603f3d011682016040523d82523d6000602084013e6113f7565b606091505b50509050505b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b80600190816114329190613110565b5080604051611441919061321e565b60405180910390207f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167fc27e6dee385f97256803537c89482a201cd863d49397e98ca8dde0930f3d572260405160405180910390a350565b6000819050919050565b6000819050919050565b6114cc81611400565b61150b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611502906132a7565b60405180910390fd5b806115387f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6114af565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611585836115a8565b6000825111806115925750805b156115a3576115a183836115f7565b505b505050565b6115b1816114c3565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606061161c838360405180606001604052806027815260200161333460279139611624565b905092915050565b60606000808573ffffffffffffffffffffffffffffffffffffffff168560405161164e91906129fe565b600060405180830381855af49150503d8060008114611689576040519150601f19603f3d011682016040523d82523d6000602084013e61168e565b606091505b509150915061169f868383876116aa565b925050509392505050565b6060831561170c576000835103611704576116c485611400565b611703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fa90613313565b60405180910390fd5b5b829050611717565b611716838361171f565b5b949350505050565b6000825111156117325781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176691906119db565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117ae82611783565b9050919050565b6117be816117a3565b81146117c957600080fd5b50565b6000813590506117db816117b5565b92915050565b6000819050919050565b6117f4816117e1565b81146117ff57600080fd5b50565b600081359050611811816117eb565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261183c5761183b611817565b5b8235905067ffffffffffffffff8111156118595761185861181c565b5b60208301915083600182028301111561187557611874611821565b5b9250929050565b60008060008060008060008060c0898b03121561189c5761189b611779565b5b60006118aa8b828c016117cc565b98505060206118bb8b828c016117cc565b97505060406118cc8b828c016117cc565b96505060606118dd8b828c01611802565b955050608089013567ffffffffffffffff8111156118fe576118fd61177e565b5b61190a8b828c01611826565b945094505060a089013567ffffffffffffffff81111561192d5761192c61177e565b5b6119398b828c01611826565b92509250509295985092959890939650565b600081519050919050565b600082825260208201905092915050565b60005b8381101561198557808201518184015260208101905061196a565b60008484015250505050565b6000601f19601f8301169050919050565b60006119ad8261194b565b6119b78185611956565b93506119c7818560208601611967565b6119d081611991565b840191505092915050565b600060208201905081810360008301526119f581846119a2565b905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a32816119fd565b8114611a3d57600080fd5b50565b600081359050611a4f81611a29565b92915050565b600060208284031215611a6b57611a6a611779565b5b6000611a7984828501611a40565b91505092915050565b60008115159050919050565b611a9781611a82565b82525050565b6000602082019050611ab26000830184611a8e565b92915050565b600080600080600060808688031215611ad457611ad3611779565b5b6000611ae2888289016117cc565b9550506020611af3888289016117cc565b9450506040611b0488828901611802565b935050606086013567ffffffffffffffff811115611b2557611b2461177e565b5b611b3188828901611826565b92509250509295509295909350565b611b49816119fd565b82525050565b6000602082019050611b646000830184611b40565b92915050565b60008083601f840112611b8057611b7f611817565b5b8235905067ffffffffffffffff811115611b9d57611b9c61181c565b5b602083019150836020820283011115611bb957611bb8611821565b5b9250929050565b60008083601f840112611bd657611bd5611817565b5b8235905067ffffffffffffffff811115611bf357611bf261181c565b5b602083019150836020820283011115611c0f57611c0e611821565b5b9250929050565b60008060008060408587031215611c3057611c2f611779565b5b600085013567ffffffffffffffff811115611c4e57611c4d61177e565b5b611c5a87828801611b6a565b9450945050602085013567ffffffffffffffff811115611c7d57611c7c61177e565b5b611c8987828801611bc0565b925092505092959194509250565b600060208284031215611cad57611cac611779565b5b6000611cbb848285016117cc565b91505092915050565b600080fd5b60006101608284031215611ce057611cdf611cc4565b5b81905092915050565b6000819050919050565b611cfc81611ce9565b8114611d0757600080fd5b50565b600081359050611d1981611cf3565b92915050565b600080600060608486031215611d3857611d37611779565b5b600084013567ffffffffffffffff811115611d5657611d5561177e565b5b611d6286828701611cc9565b9350506020611d7386828701611d0a565b9250506040611d8486828701611802565b9150509250925092565b611d97816117e1565b82525050565b6000602082019050611db26000830184611d8e565b92915050565b6000611dc382611783565b9050919050565b611dd381611db8565b8114611dde57600080fd5b50565b600081359050611df081611dca565b92915050565b60008060408385031215611e0d57611e0c611779565b5b6000611e1b85828601611de1565b9250506020611e2c85828601611802565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e7382611991565b810181811067ffffffffffffffff82111715611e9257611e91611e3b565b5b80604052505050565b6000611ea561176f565b9050611eb18282611e6a565b919050565b600067ffffffffffffffff821115611ed157611ed0611e3b565b5b611eda82611991565b9050602081019050919050565b82818337600083830152505050565b6000611f09611f0484611eb6565b611e9b565b905082815260208101848484011115611f2557611f24611e36565b5b611f30848285611ee7565b509392505050565b600082601f830112611f4d57611f4c611817565b5b8135611f5d848260208601611ef6565b91505092915050565b60008060408385031215611f7d57611f7c611779565b5b6000611f8b858286016117cc565b925050602083013567ffffffffffffffff811115611fac57611fab61177e565b5b611fb885828601611f38565b9150509250929050565b611fcb81611ce9565b82525050565b6000602082019050611fe66000830184611fc2565b92915050565b6000819050919050565b600061201161200c61200784611783565b611fec565b611783565b9050919050565b600061202382611ff6565b9050919050565b600061203582612018565b9050919050565b6120458161202a565b82525050565b6000602082019050612060600083018461203c565b92915050565b600080600080606085870312156120805761207f611779565b5b600061208e878288016117cc565b945050602061209f87828801611802565b935050604085013567ffffffffffffffff8111156120c0576120bf61177e565b5b6120cc87828801611826565b925092505092959194509250565b60008083601f8401126120f0576120ef611817565b5b8235905067ffffffffffffffff81111561210d5761210c61181c565b5b60208301915083602082028301111561212957612128611821565b5b9250929050565b60008060008060008060008060a0898b0312156121505761214f611779565b5b600061215e8b828c016117cc565b985050602061216f8b828c016117cc565b975050604089013567ffffffffffffffff8111156121905761218f61177e565b5b61219c8b828c016120da565b9650965050606089013567ffffffffffffffff8111156121bf576121be61177e565b5b6121cb8b828c016120da565b9450945050608089013567ffffffffffffffff8111156121ee576121ed61177e565b5b6121fa8b828c01611826565b92509250509295985092959890939650565b60008060008060008060a0878903121561222957612228611779565b5b600061223789828a016117cc565b965050602061224889828a016117cc565b955050604061225989828a01611802565b945050606061226a89828a01611802565b935050608087013567ffffffffffffffff81111561228b5761228a61177e565b5b61229789828a01611826565b92509250509295509295509295565b600067ffffffffffffffff8211156122c1576122c0611e3b565b5b6122ca82611991565b9050602081019050919050565b60006122ea6122e5846122a6565b611e9b565b90508281526020810184848401111561230657612305611e36565b5b612311848285611ee7565b509392505050565b600082601f83011261232e5761232d611817565b5b813561233e8482602086016122d7565b91505092915050565b60006020828403121561235d5761235c611779565b5b600082013567ffffffffffffffff81111561237b5761237a61177e565b5b61238784828501612319565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806123d757607f821691505b6020821081036123ea576123e9612390565b5b50919050565b7f77726f6e67206172726179206c656e6774687300000000000000000000000000600082015250565b6000612426601383611956565b9150612431826123f0565b602082019050919050565b6000602082019050818103600083015261245581612419565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126124b7576124b661248b565b5b80840192508235915067ffffffffffffffff8211156124d9576124d8612490565b5b6020830192506001820236038313156124f5576124f4612495565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612537826117e1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612569576125686124fd565b5b600182019050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b60006125d0602c83611956565b91506125db82612574565b604082019050919050565b600060208201905081810360008301526125ff816125c3565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000612662602c83611956565b915061266d82612606565b604082019050919050565b6000602082019050818103600083015261269181612655565b9050919050565b6126a1816117a3565b82525050565b60006020820190506126bc6000830184612698565b92915050565b6126cb81611db8565b82525050565b60006040820190506126e660008301856126c2565b6126f36020830184611d8e565b9392505050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000612756603883611956565b9150612761826126fa565b604082019050919050565b6000602082019050818103600083015261278581612749565b9050919050565b60008151905061279b816117eb565b92915050565b6000602082840312156127b7576127b6611779565b5b60006127c58482850161278c565b91505092915050565b6000819050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b600061281761281261280d846127ce565b611fec565b6127d8565b9050919050565b612827816127fc565b82525050565b60006040820190506128426000830185612698565b61284f602083018461281e565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006128b2602e83611956565b91506128bd82612856565b604082019050919050565b600060208201905081810360008301526128e1816128a5565b9050919050565b6000819050919050565b600060ff82169050919050565b600061291a612915612910846128e8565b611fec565b6128f2565b9050919050565b61292a816128ff565b82525050565b60006020820190506129456000830184612921565b92915050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b6000612981601c83611956565b915061298c8261294b565b602082019050919050565b600060208201905081810360008301526129b081612974565b9050919050565b600081519050919050565b600081905092915050565b60006129d8826129b7565b6129e281856129c2565b93506129f2818560208601611967565b80840191505092915050565b6000612a0a82846129cd565b915081905092915050565b600081519050612a2481611cf3565b92915050565b600060208284031215612a4057612a3f611779565b5b6000612a4e84828501612a15565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000612ab3602e83611956565b9150612abe82612a57565b604082019050919050565b60006020820190508181036000830152612ae281612aa6565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b6000612b45602983611956565b9150612b5082612ae9565b604082019050919050565b60006020820190508181036000830152612b7481612b38565b9050919050565b7f4465636f64696e67207369676e61747572650000000000000000000000000000600082015250565b6000612bb1601283611956565b9150612bbc82612b7b565b602082019050919050565b60006020820190508181036000830152612be081612ba4565b9050919050565b60008060008060808587031215612c0157612c00611779565b5b600085013567ffffffffffffffff811115612c1f57612c1e61177e565b5b612c2b87828801612319565b945050602085013567ffffffffffffffff811115612c4c57612c4b61177e565b5b612c5887828801612319565b935050604085013567ffffffffffffffff811115612c7957612c7861177e565b5b612c8587828801612319565b925050606085013567ffffffffffffffff811115612ca657612ca561177e565b5b612cb287828801611f38565b91505092959194509250565b7f566572696679696e6720546f6b656e0000000000000000000000000000000000600082015250565b6000612cf4600f83611956565b9150612cff82612cbe565b602082019050919050565b60006020820190508181036000830152612d2381612ce7565b9050919050565b600082825260208201905092915050565b6000612d46826129b7565b612d508185612d2a565b9350612d60818560208601611967565b612d6981611991565b840191505092915050565b60008190508160005260206000209050919050565b60008154612d96816123bf565b612da08186611956565b94506001821660008114612dbb5760018114612dd157612e04565b60ff198316865281151560200286019350612e04565b612dda85612d74565b60005b83811015612dfc57815481890152600182019150602081019050612ddd565b808801955050505b50505092915050565b600060a0820190508181036000830152612e2781886119a2565b90508181036020830152612e3b81876119a2565b90508181036040830152612e4f81866119a2565b90508181036060830152612e638185612d3b565b90508181036080830152612e778184612d89565b90509695505050505050565b612e8c81611a82565b8114612e9757600080fd5b50565b600081519050612ea981612e83565b92915050565b600060208284031215612ec557612ec4611779565b5b6000612ed384828501612e9a565b91505092915050565b7f546f6b656e207665726966696564000000000000000000000000000000000000600082015250565b6000612f12600e83611956565b9150612f1d82612edc565b602082019050919050565b60006020820190508181036000830152612f4181612f05565b9050919050565b50565b6000612f586000836129c2565b9150612f6382612f48565b600082019050919050565b6000612f7982612f4b565b9150819050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612fd07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612f93565b612fda8683612f93565b95508019841693508086168417925050509392505050565b600061300d613008613003846117e1565b611fec565b6117e1565b9050919050565b6000819050919050565b61302783612ff2565b61303b61303382613014565b848454612fa0565b825550505050565b600090565b613050613043565b61305b81848461301e565b505050565b5b8181101561307f57613074600082613048565b600181019050613061565b5050565b601f8211156130c45761309581612d74565b61309e84612f83565b810160208510156130ad578190505b6130c16130b985612f83565b830182613060565b50505b505050565b600082821c905092915050565b60006130e7600019846008026130c9565b1980831691505092915050565b600061310083836130d6565b9150826002028217905092915050565b6131198261194b565b67ffffffffffffffff81111561313257613131611e3b565b5b61313c82546123bf565b613147828285613083565b600060209050601f83116001811461317a5760008415613168578287015190505b61317285826130f4565b8655506131da565b601f19841661318886612d74565b60005b828110156131b05784890151825560018201915060208501945060208101905061318b565b868310156131cd57848901516131c9601f8916826130d6565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60006131f88261194b565b61320281856131e2565b9350613212818560208601611967565b80840191505092915050565b600061322a82846131ed565b915081905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000613291602d83611956565b915061329c82613235565b604082019050919050565b600060208201905081810360008301526132c081613284565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006132fd601d83611956565b9150613308826132c7565b602082019050919050565b6000602082019050818103600083015261332c816132f0565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203d47921163c60b829154868aeb4a43cc2a846911e18471c61ab7a06c2c288acb64736f6c63430008140033",
    "sourceMap": "679:1725:49:-:0;;;770:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;892:11;905:16;876:46;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;852:70;;;;;;;;;;770:159;;679:1725;;;;;;;;;;:::o;88:117:65:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:122::-;1105:7;1134:24;1152:5;1134:24;:::i;:::-;1123:35;;1042:122;;;:::o;1170:174::-;1269:50;1313:5;1269:50;:::i;:::-;1262:5;1259:61;1249:89;;1334:1;1331;1324:12;1249:89;1170:174;:::o;1350:195::-;1433:5;1464:6;1458:13;1449:22;;1480:59;1533:5;1480:59;:::i;:::-;1350:195;;;;:::o;1551:597::-;1675:6;1683;1732:2;1720:9;1711:7;1707:23;1703:32;1700:119;;;1738:79;;:::i;:::-;1700:119;1858:1;1883:83;1958:7;1949:6;1938:9;1934:22;1883:83;:::i;:::-;1873:93;;1829:147;2015:2;2041:90;2123:7;2114:6;2103:9;2099:22;2041:90;:::i;:::-;2031:100;;1986:155;1551:597;;;;;:::o;2154:60::-;2182:3;2203:5;2196:12;;2154:60;;;:::o;2220:142::-;2270:9;2303:53;2321:34;2330:24;2348:5;2330:24;:::i;:::-;2321:34;:::i;:::-;2303:53;:::i;:::-;2290:66;;2220:142;;;:::o;2368:126::-;2418:9;2451:37;2482:5;2451:37;:::i;:::-;2438:50;;2368:126;;;:::o;2500:145::-;2569:9;2602:37;2633:5;2602:37;:::i;:::-;2589:50;;2500:145;;;:::o;2651:169::-;2757:56;2807:5;2757:56;:::i;:::-;2752:3;2745:69;2651:169;;:::o;2826:152::-;2902:9;2935:37;2966:5;2935:37;:::i;:::-;2922:50;;2826:152;;;:::o;2984:183::-;3097:63;3154:5;3097:63;:::i;:::-;3092:3;3085:76;2984:183;;:::o;3173:422::-;3339:4;3377:2;3366:9;3362:18;3354:26;;3390:90;3477:1;3466:9;3462:17;3453:6;3390:90;:::i;:::-;3490:98;3584:2;3573:9;3569:18;3560:6;3490:98;:::i;:::-;3173:422;;;;;:::o;679:1725:49:-;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000465760003560e01c806311464fbe146200004b57806321ec1253146200006d5780636586ace614620000a3575b600080fd5b62000055620000d9565b604051620000649190620003e1565b60405180910390f35b6200008b6004803603810190620000859190620005af565b620000fd565b6040516200009a91906200063a565b60405180910390f35b620000c16004803603810190620000bb9190620005af565b620001ff565b604051620000d09190620003e1565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000620001f78260001b60405180602001620001199062000348565b6020820181038252601f19601f820116604052507f000000000000000000000000000000000000000000000000000000000000000086604051602401620001619190620006e0565b60405160208183030381529060405263f62d188860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051602001620001b992919062000761565b604051602081830303815290604052604051602001620001db929190620007d7565b6040516020818303038152906040528051906020012062000306565b905092915050565b6000806200020e8484620000fd565b905060008173ffffffffffffffffffffffffffffffffffffffff163b905060008111156200024157819250505062000300565b8360001b7f000000000000000000000000000000000000000000000000000000000000000086604051602401620002799190620006e0565b60405160208183030381529060405263f62d188860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002cc9062000348565b620002d992919062000761565b8190604051809103906000f5905080158015620002fa573d6000803e3d6000fd5b50925050505b92915050565b6000620003158383306200031d565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b610879806200080083390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620003a16200039b620003958462000356565b62000376565b62000356565b9050919050565b6000620003b58262000380565b9050919050565b6000620003c982620003a8565b9050919050565b620003db81620003bc565b82525050565b6000602082019050620003f86000830184620003d0565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000467826200041c565b810181811067ffffffffffffffff821117156200048957620004886200042d565b5b80604052505050565b60006200049e620003fe565b9050620004ac82826200045c565b919050565b600067ffffffffffffffff821115620004cf57620004ce6200042d565b5b620004da826200041c565b9050602081019050919050565b82818337600083830152505050565b60006200050d6200050784620004b1565b62000492565b9050828152602081018484840111156200052c576200052b62000417565b5b62000539848285620004e7565b509392505050565b600082601f83011262000559576200055862000412565b5b81356200056b848260208601620004f6565b91505092915050565b6000819050919050565b620005898162000574565b81146200059557600080fd5b50565b600081359050620005a9816200057e565b92915050565b60008060408385031215620005c957620005c862000408565b5b600083013567ffffffffffffffff811115620005ea57620005e96200040d565b5b620005f88582860162000541565b92505060206200060b8582860162000598565b9150509250929050565b6000620006228262000356565b9050919050565b620006348162000615565b82525050565b600060208201905062000651600083018462000629565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200069357808201518184015260208101905062000676565b60008484015250505050565b6000620006ac8262000657565b620006b8818562000662565b9350620006ca81856020860162000673565b620006d5816200041c565b840191505092915050565b60006020820190508181036000830152620006fc81846200069f565b905092915050565b600081519050919050565b600082825260208201905092915050565b60006200072d8262000704565b6200073981856200070f565b93506200074b81856020860162000673565b62000756816200041c565b840191505092915050565b600060408201905062000778600083018562000629565b81810360208301526200078c818462000720565b90509392505050565b600081905092915050565b6000620007ad8262000704565b620007b9818562000795565b9350620007cb81856020860162000673565b80840191505092915050565b6000620007e58285620007a0565b9150620007f38284620007a0565b9150819050939250505056fe608060405260405161087938038061087983398181016040528101906100259190610520565b6100378282600061003e60201b60201c565b505061074f565b61004d8361007660201b60201c565b60008251118061005a5750805b156100715761006f83836100cb60201b60201c565b505b505050565b610085816100fe60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606100f68383604051806060016040528060278152602001610852602791396101c360201b60201c565b905092915050565b61010d8161024f60201b60201c565b61014c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610143906105ff565b60405180910390fd5b8061017f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61027260201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101ed9190610666565b600060405180830381855af49150503d8060008114610228576040519150601f19603f3d011682016040523d82523d6000602084013e61022d565b606091505b50915091506102448683838761027c60201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156102e45760008351036102dc5761029c8561024f60201b60201c565b6102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d2906106c9565b60405180910390fd5b5b8290506102f5565b6102f483836102fd60201b60201c565b5b949350505050565b6000825111156103105781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610344919061072d565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061038c82610361565b9050919050565b61039c81610381565b81146103a757600080fd5b50565b6000815190506103b981610393565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610412826103c9565b810181811067ffffffffffffffff82111715610431576104306103da565b5b80604052505050565b600061044461034d565b90506104508282610409565b919050565b600067ffffffffffffffff8211156104705761046f6103da565b5b610479826103c9565b9050602081019050919050565b60005b838110156104a4578082015181840152602081019050610489565b60008484015250505050565b60006104c36104be84610455565b61043a565b9050828152602081018484840111156104df576104de6103c4565b5b6104ea848285610486565b509392505050565b600082601f830112610507576105066103bf565b5b81516105178482602086016104b0565b91505092915050565b6000806040838503121561053757610536610357565b5b6000610545858286016103aa565b925050602083015167ffffffffffffffff8111156105665761056561035c565b5b610572858286016104f2565b9150509250929050565b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006105e9602d8361057c565b91506105f48261058d565b604082019050919050565b60006020820190508181036000830152610618816105dc565b9050919050565b600081519050919050565b600081905092915050565b60006106408261061f565b61064a818561062a565b935061065a818560208601610486565b80840191505092915050565b60006106728284610635565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006106b3601d8361057c565b91506106be8261067d565b602082019050919050565b600060208201905081810360008301526106e2816106a6565b9050919050565b600081519050919050565b60006106ff826106e9565b610709818561057c565b9350610719818560208601610486565b610722816103c9565b840191505092915050565b6000602082019050818103600083015261074781846106f4565b905092915050565b60f58061075d6000396000f3fe608060405236601057600e6018565b005b60166018565b005b601e602c565b602a6026602e565b603b565b565b565b600060366060565b905090565b3660008037600080366000845af43d6000803e8060008114605b573d6000f35b3d6000fd5b6000608c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60b5565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea2646970667358221220338e72e5eb09e605733ce6c07f31d23a2eff1e9fd8c77171de4b7d86b33a744e64736f6c63430008140033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b2ae941ea882db854690a2f313808746199df8802c3026ed06cc1384dbb614eb64736f6c63430008140033",
    "sourceMap": "679:1725:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;713:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1975:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1309:541;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;713:50;;;:::o;1975:427::-;2053:7;2079:316;2123:4;2115:13;;2207:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2279:21;2343:7;2303:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2260:93;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2169:202;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2142:243;;;;;;2079:22;:316::i;:::-;2072:323;;1975:427;;;;:::o;1309:541::-;1385:15;1412:12;1427:25;1438:7;1447:4;1427:10;:25::i;:::-;1412:40;;1462:16;1481:4;:16;;;1462:35;;1522:1;1511:8;:12;1507:76;;;1566:4;1539:33;;;;;;1507:76;1680:4;1672:13;;1712:21;1792:7;1752:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:171;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:251;;1402:448;;1309:541;;;;;:::o;1769:165:40:-;1852:7;1878:49;1893:4;1899:12;1921:4;1878:14;:49::i;:::-;1871:56;;1769:165;;;;:::o;2177:1772::-;2278:12;2385:4;2379:11;3604:12;3597:4;3592:3;3588:14;3581:36;3653:4;3646;3641:3;3637:14;3630:28;3683:8;3678:3;3671:21;3776:4;3771:3;3767:14;3887:4;3880:5;3872:20;3930:2;3923:5;3913:20;3905:28;;2354:1589;;2177:1772;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:65:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:134::-;411:9;444:37;475:5;444:37;:::i;:::-;431:50;;353:134;;;:::o;493:163::-;572:9;605:45;644:5;605:45;:::i;:::-;592:58;;493:163;;;:::o;662:189::-;778:66;838:5;778:66;:::i;:::-;773:3;766:79;662:189;;:::o;857:280::-;979:4;1017:2;1006:9;1002:18;994:26;;1030:100;1127:1;1116:9;1112:17;1103:6;1030:100;:::i;:::-;857:280;;;;:::o;1143:75::-;1176:6;1209:2;1203:9;1193:19;;1143:75;:::o;1224:117::-;1333:1;1330;1323:12;1347:117;1456:1;1453;1446:12;1470:117;1579:1;1576;1569:12;1593:117;1702:1;1699;1692:12;1716:102;1757:6;1808:2;1804:7;1799:2;1792:5;1788:14;1784:28;1774:38;;1716:102;;;:::o;1824:180::-;1872:77;1869:1;1862:88;1969:4;1966:1;1959:15;1993:4;1990:1;1983:15;2010:281;2093:27;2115:4;2093:27;:::i;:::-;2085:6;2081:40;2223:6;2211:10;2208:22;2187:18;2175:10;2172:34;2169:62;2166:88;;;2234:18;;:::i;:::-;2166:88;2274:10;2270:2;2263:22;2053:238;2010:281;;:::o;2297:129::-;2331:6;2358:20;;:::i;:::-;2348:30;;2387:33;2415:4;2407:6;2387:33;:::i;:::-;2297:129;;;:::o;2432:308::-;2494:4;2584:18;2576:6;2573:30;2570:56;;;2606:18;;:::i;:::-;2570:56;2644:29;2666:6;2644:29;:::i;:::-;2636:37;;2728:4;2722;2718:15;2710:23;;2432:308;;;:::o;2746:146::-;2843:6;2838:3;2833;2820:30;2884:1;2875:6;2870:3;2866:16;2859:27;2746:146;;;:::o;2898:425::-;2976:5;3001:66;3017:49;3059:6;3017:49;:::i;:::-;3001:66;:::i;:::-;2992:75;;3090:6;3083:5;3076:21;3128:4;3121:5;3117:16;3166:3;3157:6;3152:3;3148:16;3145:25;3142:112;;;3173:79;;:::i;:::-;3142:112;3263:54;3310:6;3305:3;3300;3263:54;:::i;:::-;2982:341;2898:425;;;;;:::o;3343:340::-;3399:5;3448:3;3441:4;3433:6;3429:17;3425:27;3415:122;;3456:79;;:::i;:::-;3415:122;3573:6;3560:20;3598:79;3673:3;3665:6;3658:4;3650:6;3646:17;3598:79;:::i;:::-;3589:88;;3405:278;3343:340;;;;:::o;3689:77::-;3726:7;3755:5;3744:16;;3689:77;;;:::o;3772:122::-;3845:24;3863:5;3845:24;:::i;:::-;3838:5;3835:35;3825:63;;3884:1;3881;3874:12;3825:63;3772:122;:::o;3900:139::-;3946:5;3984:6;3971:20;3962:29;;4000:33;4027:5;4000:33;:::i;:::-;3900:139;;;;:::o;4045:654::-;4123:6;4131;4180:2;4168:9;4159:7;4155:23;4151:32;4148:119;;;4186:79;;:::i;:::-;4148:119;4334:1;4323:9;4319:17;4306:31;4364:18;4356:6;4353:30;4350:117;;;4386:79;;:::i;:::-;4350:117;4491:63;4546:7;4537:6;4526:9;4522:22;4491:63;:::i;:::-;4481:73;;4277:287;4603:2;4629:53;4674:7;4665:6;4654:9;4650:22;4629:53;:::i;:::-;4619:63;;4574:118;4045:654;;;;;:::o;4705:96::-;4742:7;4771:24;4789:5;4771:24;:::i;:::-;4760:35;;4705:96;;;:::o;4807:118::-;4894:24;4912:5;4894:24;:::i;:::-;4889:3;4882:37;4807:118;;:::o;4931:222::-;5024:4;5062:2;5051:9;5047:18;5039:26;;5075:71;5143:1;5132:9;5128:17;5119:6;5075:71;:::i;:::-;4931:222;;;;:::o;5159:99::-;5211:6;5245:5;5239:12;5229:22;;5159:99;;;:::o;5264:169::-;5348:11;5382:6;5377:3;5370:19;5422:4;5417:3;5413:14;5398:29;;5264:169;;;;:::o;5439:246::-;5520:1;5530:113;5544:6;5541:1;5538:13;5530:113;;;5629:1;5624:3;5620:11;5614:18;5610:1;5605:3;5601:11;5594:39;5566:2;5563:1;5559:10;5554:15;;5530:113;;;5677:1;5668:6;5663:3;5659:16;5652:27;5501:184;5439:246;;;:::o;5691:377::-;5779:3;5807:39;5840:5;5807:39;:::i;:::-;5862:71;5926:6;5921:3;5862:71;:::i;:::-;5855:78;;5942:65;6000:6;5995:3;5988:4;5981:5;5977:16;5942:65;:::i;:::-;6032:29;6054:6;6032:29;:::i;:::-;6027:3;6023:39;6016:46;;5783:285;5691:377;;;;:::o;6074:313::-;6187:4;6225:2;6214:9;6210:18;6202:26;;6274:9;6268:4;6264:20;6260:1;6249:9;6245:17;6238:47;6302:78;6375:4;6366:6;6302:78;:::i;:::-;6294:86;;6074:313;;;;:::o;6393:98::-;6444:6;6478:5;6472:12;6462:22;;6393:98;;;:::o;6497:168::-;6580:11;6614:6;6609:3;6602:19;6654:4;6649:3;6645:14;6630:29;;6497:168;;;;:::o;6671:373::-;6757:3;6785:38;6817:5;6785:38;:::i;:::-;6839:70;6902:6;6897:3;6839:70;:::i;:::-;6832:77;;6918:65;6976:6;6971:3;6964:4;6957:5;6953:16;6918:65;:::i;:::-;7008:29;7030:6;7008:29;:::i;:::-;7003:3;6999:39;6992:46;;6761:283;6671:373;;;;:::o;7050:419::-;7189:4;7227:2;7216:9;7212:18;7204:26;;7240:71;7308:1;7297:9;7293:17;7284:6;7240:71;:::i;:::-;7358:9;7352:4;7348:20;7343:2;7332:9;7328:18;7321:48;7386:76;7457:4;7448:6;7386:76;:::i;:::-;7378:84;;7050:419;;;;;:::o;7475:147::-;7576:11;7613:3;7598:18;;7475:147;;;;:::o;7628:386::-;7732:3;7760:38;7792:5;7760:38;:::i;:::-;7814:88;7895:6;7890:3;7814:88;:::i;:::-;7807:95;;7911:65;7969:6;7964:3;7957:4;7950:5;7946:16;7911:65;:::i;:::-;8001:6;7996:3;7992:16;7985:23;;7736:278;7628:386;;;;:::o;8020:427::-;8196:3;8218:93;8307:3;8298:6;8218:93;:::i;:::-;8211:100;;8328:93;8417:3;8408:6;8328:93;:::i;:::-;8321:100;;8438:3;8431:10;;8020:427;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "47240": [
        {
          "start": 219,
          "length": 32
        },
        {
          "start": 303,
          "length": 32
        },
        {
          "start": 583,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "accountImplementation()": "11464fbe",
    "createAccount(string,uint256)": "6586ace6",
    "getAddress(string,uint256)": "21ec1253"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"contract IProviderManager\",\"name\":\"providerManager_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract SigmaWallet\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract SigmaWallet\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(string,uint256)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(string,uint256)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for SimpleAccount A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SigmaWalletFactory.sol\":\"SigmaWalletFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@account-abstraction/=lib/account-abstraction/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x5eb3253b32fd8ba8ae7b9d83da8e9924254a4d3d17a8772b41280e8572974b3c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b2d23d1276f85300e2ad0c7219614a072796b4f5581fd552b0bcaa47904400d3\",\"dweb:/ipfs/QmVWK5WZ3VskNTfCBxLqY4xBP7WGm3cRM9Qhdy56f5TfAk\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3\",\"dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/SigmaWallet.sol\":{\"keccak256\":\"0x17e109f54605438dffe482cd3430e6f9495b4b47a336b26b2f69e10edd01bd60\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e1e293506a8c33d89684a527dc93dbc8a21a18d7fae06d6a537349990ae7b534\",\"dweb:/ipfs/QmTecsLU7rAcuzK578BLZcC6nA4tK7gyd61eqrwbqjDESC\"]},\"src/SigmaWalletFactory.sol\":{\"keccak256\":\"0x98b5af243f4231d2a33f12af4fc5d425b8fcf246ca6a06b5ba3185edef5df034\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f42cef97620c3ff114afe34e1a5526594c8b2ac2ac2a0a160c89714116cbf798\",\"dweb:/ipfs/QmXDVAcJF8XVwu8Adx6zdwV3D6QgB7tABRP4z982fwyf3N\"]},\"src/providers/interfaces/IProvider.sol\":{\"keccak256\":\"0xd9e31023ec7267a1d1989c8e64181c862b94885abf1db361e815cf3735ffa1f0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5261e5659739ff50f11223b4da66af3ec41ef21a5f4e9c5c875b9ae922938c87\",\"dweb:/ipfs/QmbghAXBwAA8on6h9bhYX3vYonVZWQZZCGfLXuU5f8vpdM\"]},\"src/providers/interfaces/IProviderManager.sol\":{\"keccak256\":\"0x8dea91d2a2c5683641cddd22ecce91860e60b5ec4c067c1bd828ebf7ce66c889\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://152bedfcef4543d5414d6a380389289a421dc87d2a3ad1f9dfde844bf1543a27\",\"dweb:/ipfs/QmcHUu8y7vna3gAv6bAyyfnP3UgpdoMAUF44wFYNhSuc2W\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "contract IProviderManager",
              "name": "providerManager_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accountImplementation",
          "outputs": [
            {
              "internalType": "contract SigmaWallet",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "ownerId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAccount",
          "outputs": [
            {
              "internalType": "contract SigmaWallet",
              "name": "ret",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "ownerId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createAccount(string,uint256)": {
            "notice": "create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
          },
          "getAddress(string,uint256)": {
            "notice": "calculate the counterfactual address of this account as it would be returned by createAccount()"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@account-abstraction/=lib/account-abstraction/",
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SigmaWalletFactory.sol": "SigmaWalletFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BaseAccount.sol": {
        "keccak256": "0x5eb3253b32fd8ba8ae7b9d83da8e9924254a4d3d17a8772b41280e8572974b3c",
        "urls": [
          "bzz-raw://b2d23d1276f85300e2ad0c7219614a072796b4f5581fd552b0bcaa47904400d3",
          "dweb:/ipfs/QmVWK5WZ3VskNTfCBxLqY4xBP7WGm3cRM9Qhdy56f5TfAk"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418",
        "urls": [
          "bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4",
          "dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol": {
        "keccak256": "0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752",
        "urls": [
          "bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3",
          "dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf",
        "urls": [
          "bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1",
          "dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
        "keccak256": "0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89",
        "urls": [
          "bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447",
          "dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/SigmaWallet.sol": {
        "keccak256": "0x17e109f54605438dffe482cd3430e6f9495b4b47a336b26b2f69e10edd01bd60",
        "urls": [
          "bzz-raw://e1e293506a8c33d89684a527dc93dbc8a21a18d7fae06d6a537349990ae7b534",
          "dweb:/ipfs/QmTecsLU7rAcuzK578BLZcC6nA4tK7gyd61eqrwbqjDESC"
        ],
        "license": "GPL-3.0"
      },
      "src/SigmaWalletFactory.sol": {
        "keccak256": "0x98b5af243f4231d2a33f12af4fc5d425b8fcf246ca6a06b5ba3185edef5df034",
        "urls": [
          "bzz-raw://f42cef97620c3ff114afe34e1a5526594c8b2ac2ac2a0a160c89714116cbf798",
          "dweb:/ipfs/QmXDVAcJF8XVwu8Adx6zdwV3D6QgB7tABRP4z982fwyf3N"
        ],
        "license": "GPL-3.0"
      },
      "src/providers/interfaces/IProvider.sol": {
        "keccak256": "0xd9e31023ec7267a1d1989c8e64181c862b94885abf1db361e815cf3735ffa1f0",
        "urls": [
          "bzz-raw://5261e5659739ff50f11223b4da66af3ec41ef21a5f4e9c5c875b9ae922938c87",
          "dweb:/ipfs/QmbghAXBwAA8on6h9bhYX3vYonVZWQZZCGfLXuU5f8vpdM"
        ],
        "license": "GPL-3.0"
      },
      "src/providers/interfaces/IProviderManager.sol": {
        "keccak256": "0x8dea91d2a2c5683641cddd22ecce91860e60b5ec4c067c1bd828ebf7ce66c889",
        "urls": [
          "bzz-raw://152bedfcef4543d5414d6a380389289a421dc87d2a3ad1f9dfde844bf1543a27",
          "dweb:/ipfs/QmcHUu8y7vna3gAv6bAyyfnP3UgpdoMAUF44wFYNhSuc2W"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SigmaWalletFactory.sol",
    "id": 47368,
    "exportedSymbols": {
      "Address": [
        45104
      ],
      "BaseAccount": [
        141
      ],
      "Create2": [
        45185
      ],
      "ECDSA": [
        45890
      ],
      "ERC1967Proxy": [
        44044
      ],
      "ERC1967Upgrade": [
        44348
      ],
      "IAccount": [
        397
      ],
      "IAggregator": [
        431
      ],
      "IBeacon": [
        44410
      ],
      "IERC1155Receiver": [
        44736
      ],
      "IERC165": [
        45902
      ],
      "IERC1822Proxiable": [
        44007
      ],
      "IERC1967": [
        43997
      ],
      "IERC721Receiver": [
        44754
      ],
      "IERC777Recipient": [
        44774
      ],
      "IEntryPoint": [
        637
      ],
      "INonceManager": [
        656
      ],
      "IProviderManager": [
        49668
      ],
      "IStakeManager": [
        762
      ],
      "Initializable": [
        44579
      ],
      "Math": [
        46768
      ],
      "Proxy": [
        44400
      ],
      "SigmaWallet": [
        47229
      ],
      "SigmaWalletFactory": [
        47367
      ],
      "SignedMath": [
        46873
      ],
      "StorageSlot": [
        45295
      ],
      "Strings": [
        45524
      ],
      "TokenCallbackHandler": [
        1084
      ],
      "UUPSUpgradeable": [
        44695
      ],
      "UserOperation": [
        790
      ],
      "UserOperationLib": [
        960
      ],
      "ValidationData": [
        151
      ],
      "_intersectTimeRange": [
        295
      ],
      "_packValidationData": [
        332,
        370
      ],
      "_parseValidationData": [
        210
      ],
      "calldataKeccak": [
        380
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:2369:49",
    "nodes": [
      {
        "id": 47231,
        "nodeType": "PragmaDirective",
        "src": "36:24:49",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 47232,
        "nodeType": "ImportDirective",
        "src": "62:51:49",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47368,
        "sourceUnit": 45186,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47233,
        "nodeType": "ImportDirective",
        "src": "114:64:49",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47368,
        "sourceUnit": 44045,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47235,
        "nodeType": "ImportDirective",
        "src": "180:79:49",
        "nodes": [],
        "absolutePath": "src/providers/interfaces/IProviderManager.sol",
        "file": "./providers/interfaces/IProviderManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47368,
        "sourceUnit": 49669,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47234,
              "name": "IProviderManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49668,
              "src": "189:16:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47236,
        "nodeType": "ImportDirective",
        "src": "261:27:49",
        "nodes": [],
        "absolutePath": "src/SigmaWallet.sol",
        "file": "./SigmaWallet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47368,
        "sourceUnit": 47230,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47367,
        "nodeType": "ContractDefinition",
        "src": "679:1725:49",
        "nodes": [
          {
            "id": 47240,
            "nodeType": "VariableDeclaration",
            "src": "713:50:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "11464fbe",
            "mutability": "immutable",
            "name": "accountImplementation",
            "nameLocation": "742:21:49",
            "scope": 47367,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SigmaWallet_$47229",
              "typeString": "contract SigmaWallet"
            },
            "typeName": {
              "id": 47239,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47238,
                "name": "SigmaWallet",
                "nameLocations": [
                  "713:11:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47229,
                "src": "713:11:49"
              },
              "referencedDeclaration": 47229,
              "src": "713:11:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                "typeString": "contract SigmaWallet"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47259,
            "nodeType": "FunctionDefinition",
            "src": "770:159:49",
            "nodes": [],
            "body": {
              "id": 47258,
              "nodeType": "Block",
              "src": "842:87:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47249,
                      "name": "accountImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47240,
                      "src": "852:21:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                        "typeString": "contract SigmaWallet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47253,
                          "name": "_entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47243,
                          "src": "892:11:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$637",
                            "typeString": "contract IEntryPoint"
                          }
                        },
                        {
                          "id": 47254,
                          "name": "providerManager_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47246,
                          "src": "905:16:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IProviderManager_$49668",
                            "typeString": "contract IProviderManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEntryPoint_$637",
                            "typeString": "contract IEntryPoint"
                          },
                          {
                            "typeIdentifier": "t_contract$_IProviderManager_$49668",
                            "typeString": "contract IProviderManager"
                          }
                        ],
                        "id": 47252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "876:15:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$637_$_t_contract$_IProviderManager_$49668_$returns$_t_contract$_SigmaWallet_$47229_$",
                          "typeString": "function (contract IEntryPoint,contract IProviderManager) returns (contract SigmaWallet)"
                        },
                        "typeName": {
                          "id": 47251,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47250,
                            "name": "SigmaWallet",
                            "nameLocations": [
                              "880:11:49"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47229,
                            "src": "880:11:49"
                          },
                          "referencedDeclaration": 47229,
                          "src": "880:11:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                            "typeString": "contract SigmaWallet"
                          }
                        }
                      },
                      "id": 47255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "876:46:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                        "typeString": "contract SigmaWallet"
                      }
                    },
                    "src": "852:70:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                      "typeString": "contract SigmaWallet"
                    }
                  },
                  "id": 47257,
                  "nodeType": "ExpressionStatement",
                  "src": "852:70:49"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 47247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47243,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "794:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 47259,
                  "src": "782:23:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$637",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 47242,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47241,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "782:11:49"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 637,
                      "src": "782:11:49"
                    },
                    "referencedDeclaration": 637,
                    "src": "782:11:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$637",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47246,
                  "mutability": "mutable",
                  "name": "providerManager_",
                  "nameLocation": "824:16:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 47259,
                  "src": "807:33:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IProviderManager_$49668",
                    "typeString": "contract IProviderManager"
                  },
                  "typeName": {
                    "id": 47245,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47244,
                      "name": "IProviderManager",
                      "nameLocations": [
                        "807:16:49"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49668,
                      "src": "807:16:49"
                    },
                    "referencedDeclaration": 49668,
                    "src": "807:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IProviderManager_$49668",
                      "typeString": "contract IProviderManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "781:60:49"
            },
            "returnParameters": {
              "id": 47248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "842:0:49"
            },
            "scope": 47367,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47324,
            "nodeType": "FunctionDefinition",
            "src": "1309:541:49",
            "nodes": [],
            "body": {
              "id": 47323,
              "nodeType": "Block",
              "src": "1402:448:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47271,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1420:4:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 47323,
                      "src": "1412:12:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 47270,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1412:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47276,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 47273,
                        "name": "ownerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47262,
                        "src": "1438:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 47274,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47264,
                        "src": "1447:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47272,
                      "name": "getAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47366,
                      "src": "1427:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (string memory,uint256) view returns (address)"
                      }
                    },
                    "id": 47275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:25:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1412:40:49"
                },
                {
                  "assignments": [
                    47278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47278,
                      "mutability": "mutable",
                      "name": "codeSize",
                      "nameLocation": "1470:8:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 47323,
                      "src": "1462:16:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47277,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1462:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47282,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 47279,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47271,
                        "src": "1481:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 47280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1486:4:49",
                      "memberName": "code",
                      "nodeType": "MemberAccess",
                      "src": "1481:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 47281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1491:6:49",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1481:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1462:35:49"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47283,
                      "name": "codeSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47278,
                      "src": "1511:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 47284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1522:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1511:12:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47294,
                  "nodeType": "IfStatement",
                  "src": "1507:76:49",
                  "trueBody": {
                    "id": 47293,
                    "nodeType": "Block",
                    "src": "1525:58:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 47289,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47271,
                                  "src": "1566:4:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 47288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1558:8:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 47287,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1558:8:49",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 47290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1558:13:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 47286,
                            "name": "SigmaWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47229,
                            "src": "1546:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SigmaWallet_$47229_$",
                              "typeString": "type(contract SigmaWallet)"
                            }
                          },
                          "id": 47291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1546:26:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                            "typeString": "contract SigmaWallet"
                          }
                        },
                        "functionReturnParameters": 47269,
                        "id": 47292,
                        "nodeType": "Return",
                        "src": "1539:33:49"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 47321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47295,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47268,
                      "src": "1592:3:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                        "typeString": "contract SigmaWallet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 47309,
                                      "name": "accountImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 47240,
                                      "src": "1712:21:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                                        "typeString": "contract SigmaWallet"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                                        "typeString": "contract SigmaWallet"
                                      }
                                    ],
                                    "id": 47308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1704:7:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 47307,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1704:7:49",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 47310,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1704:30:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 47313,
                                        "name": "SigmaWallet",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 47229,
                                        "src": "1767:11:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_SigmaWallet_$47229_$",
                                          "typeString": "type(contract SigmaWallet)"
                                        }
                                      },
                                      "id": 47314,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1779:10:49",
                                      "memberName": "initialize",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 47055,
                                      "src": "1767:22:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function SigmaWallet.initialize(string memory)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 47315,
                                          "name": "ownerId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 47262,
                                          "src": "1792:7:49",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "id": 47316,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1791:9:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function SigmaWallet.initialize(string memory)"
                                      },
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 47311,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1752:3:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 47312,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1756:10:49",
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "1752:14:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 47317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1752:49:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 47301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1648:16:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$44044_$",
                                    "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                  },
                                  "typeName": {
                                    "id": 47300,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 47299,
                                      "name": "ERC1967Proxy",
                                      "nameLocations": [
                                        "1652:12:49"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 44044,
                                      "src": "1652:12:49"
                                    },
                                    "referencedDeclaration": 44044,
                                    "src": "1652:12:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$44044",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  }
                                },
                                "id": 47306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "salt"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 47304,
                                        "name": "salt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 47264,
                                        "src": "1680:4:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 47303,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1672:7:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 47302,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1672:7:49",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 47305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1672:13:49",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "src": "1648:38:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$44044_$salt",
                                  "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                }
                              },
                              "id": 47318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1648:171:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$44044",
                                "typeString": "contract ERC1967Proxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$44044",
                                "typeString": "contract ERC1967Proxy"
                              }
                            ],
                            "id": 47298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1623:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 47297,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1623:8:49",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1623:210:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 47296,
                        "name": "SigmaWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47229,
                        "src": "1598:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SigmaWallet_$47229_$",
                          "typeString": "type(contract SigmaWallet)"
                        }
                      },
                      "id": 47320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1598:245:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                        "typeString": "contract SigmaWallet"
                      }
                    },
                    "src": "1592:251:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                      "typeString": "contract SigmaWallet"
                    }
                  },
                  "id": 47322,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:251:49"
                }
              ]
            },
            "documentation": {
              "id": 47260,
              "nodeType": "StructuredDocumentation",
              "src": "935:369:49",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "6586ace6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAccount",
            "nameLocation": "1318:13:49",
            "parameters": {
              "id": 47265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47262,
                  "mutability": "mutable",
                  "name": "ownerId",
                  "nameLocation": "1346:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 47324,
                  "src": "1332:21:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47261,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47264,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1363:4:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 47324,
                  "src": "1355:12:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1331:37:49"
            },
            "returnParameters": {
              "id": 47269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47268,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1397:3:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 47324,
                  "src": "1385:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                    "typeString": "contract SigmaWallet"
                  },
                  "typeName": {
                    "id": 47267,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47266,
                      "name": "SigmaWallet",
                      "nameLocations": [
                        "1385:11:49"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47229,
                      "src": "1385:11:49"
                    },
                    "referencedDeclaration": 47229,
                    "src": "1385:11:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                      "typeString": "contract SigmaWallet"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1384:17:49"
            },
            "scope": 47367,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47366,
            "nodeType": "FunctionDefinition",
            "src": "1975:427:49",
            "nodes": [],
            "body": {
              "id": 47365,
              "nodeType": "Block",
              "src": "2062:340:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47338,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47329,
                            "src": "2123:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 47337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2115:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 47336,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2115:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2115:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 47344,
                                      "name": "ERC1967Proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44044,
                                      "src": "2212:12:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$44044_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$44044_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    ],
                                    "id": 47343,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "2207:4:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 47345,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2207:18:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_ERC1967Proxy_$44044",
                                    "typeString": "type(contract ERC1967Proxy)"
                                  }
                                },
                                "id": 47346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2226:12:49",
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "2207:31:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 47351,
                                        "name": "accountImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 47240,
                                        "src": "2279:21:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                                          "typeString": "contract SigmaWallet"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_SigmaWallet_$47229",
                                          "typeString": "contract SigmaWallet"
                                        }
                                      ],
                                      "id": 47350,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2271:7:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 47349,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2271:7:49",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 47352,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2271:30:49",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 47355,
                                          "name": "SigmaWallet",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 47229,
                                          "src": "2318:11:49",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_SigmaWallet_$47229_$",
                                            "typeString": "type(contract SigmaWallet)"
                                          }
                                        },
                                        "id": 47356,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2330:10:49",
                                        "memberName": "initialize",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 47055,
                                        "src": "2318:22:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function SigmaWallet.initialize(string memory)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 47357,
                                            "name": "ownerId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 47327,
                                            "src": "2343:7:49",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          }
                                        ],
                                        "id": 47358,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2342:9:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function SigmaWallet.initialize(string memory)"
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 47353,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "2303:3:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 47354,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2307:10:49",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "2303:14:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 47359,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2303:49:49",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 47347,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2260:3:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 47348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2264:6:49",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2260:10:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 47360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2260:93:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 47341,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2169:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 47342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2173:12:49",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2169:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 47361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2169:202:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 47340,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2142:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 47362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2142:243:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 47334,
                        "name": "Create2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45185,
                        "src": "2079:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create2_$45185_$",
                          "typeString": "type(library Create2)"
                        }
                      },
                      "id": 47335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2087:14:49",
                      "memberName": "computeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45170,
                      "src": "2079:22:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 47363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2079:316:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 47333,
                  "id": 47364,
                  "nodeType": "Return",
                  "src": "2072:323:49"
                }
              ]
            },
            "documentation": {
              "id": 47325,
              "nodeType": "StructuredDocumentation",
              "src": "1856:114:49",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "21ec1253",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "1984:10:49",
            "parameters": {
              "id": 47330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47327,
                  "mutability": "mutable",
                  "name": "ownerId",
                  "nameLocation": "2009:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 47366,
                  "src": "1995:21:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47326,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47329,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2026:4:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 47366,
                  "src": "2018:12:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2018:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1994:37:49"
            },
            "returnParameters": {
              "id": 47333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47366,
                  "src": "2053:7:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2052:9:49"
            },
            "scope": 47367,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SigmaWalletFactory",
        "contractDependencies": [
          44044,
          47229
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 47237,
          "nodeType": "StructuredDocumentation",
          "src": "290:388:49",
          "text": " A sample factory contract for SimpleAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47367
        ],
        "name": "SigmaWalletFactory",
        "nameLocation": "688:18:49",
        "scope": 47368,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 49
}